(()=>{"use strict";var t=function(){function t(){var t=this;this.fontSizeHandlers=new Array,this.contentSettingHandlers=new Array,this.activityStatusHandlers=new Array,window.addEventListener("message",(function(e){t.receiveMessage(e)}))}return t.prototype.registerContent=function(){this.sendMessage({type:"registerContent",data:{}})},t.prototype.registerActivityProgress=function(t){this.sendMessage({type:"registerActivityProgress",data:t})},t.prototype.registerContentHeight=function(t){this.sendMessage({type:"registerContentHeight",data:{height:t}})},t.prototype.addContentSettingHandler=function(t){this.contentSettingHandlers.push(t)},t.prototype.addFontSizeHandler=function(t){this.fontSizeHandlers.push(t)},t.prototype.addActivityStatusHandler=function(t){this.activityStatusHandlers.push(t)},t.prototype.fontSizeMassageHandler=function(t){for(var e=0,n=this.fontSizeHandlers;e<n.length;e++)(0,n[e])(t)},t.prototype.contentSettingHandler=function(t){for(var e=0,n=this.contentSettingHandlers;e<n.length;e++)(0,n[e])(t)},t.prototype.contentStatusHandler=function(){for(var t=0,e=this.activityStatusHandlers;t<e.length;t++)(0,e[t])()},t.prototype.receiveMessage=function(t){"zoomByFactor"==t.data.type&&this.fontSizeMassageHandler(t.data.data),"contentSettings"==t.data.type&&this.contentSettingHandler(t.data.data),"activityStatus"==t.data.type&&this.contentStatusHandler()},t.prototype.sendMessage=function(t){window.parent.postMessage(t,"*")},t}();window.PetljaRT=new t})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0vcGV0bGphUlRCdW5kbGUuanMiLCJtYXBwaW5ncyI6Im1CQUlBLGlCQUtJLHdCQUpRLEtBQUFBLGlCQUFtQixJQUFJQyxNQUN2QixLQUFBQyx1QkFBeUIsSUFBSUQsTUFDN0IsS0FBQUUsdUJBQXlCLElBQUlGLE1BR2pDRyxPQUFPQyxpQkFBaUIsV0FBVyxTQUFDQyxHQUFRLEVBQUtDLGVBQWVELEVBQUksR0FDeEUsQ0EyREosT0F6REksWUFBQUUsZ0JBQUEsV0FDSUMsS0FBS0MsWUFBWSxDQUFFQyxLQUFNLGtCQUFtQkMsS0FBTSxDQUFDLEdBQ3ZELEVBRUEsWUFBQUMseUJBQUEsU0FBeUJELEdBQ3JCSCxLQUFLQyxZQUFZLENBQUNDLEtBQU8sMkJBQTRCQyxLQUFPQSxHQUNoRSxFQUVBLFlBQUFFLHNCQUFBLFNBQXNCQyxHQUNsQk4sS0FBS0MsWUFBWSxDQUFDQyxLQUFPLHdCQUF5QkMsS0FBTyxDQUFDRyxPQUFTQSxJQUN2RSxFQUVBLFlBQUFDLHlCQUFBLFNBQXlCQyxHQUNyQlIsS0FBS1AsdUJBQXVCZ0IsS0FBS0QsRUFDckMsRUFFQSxZQUFBRSxtQkFBQSxTQUFtQkMsR0FDZlgsS0FBS1QsaUJBQWlCa0IsS0FBS0UsRUFDL0IsRUFFQSxZQUFBQyx5QkFBQSxTQUF5QkMsR0FDckJiLEtBQUtOLHVCQUF1QmUsS0FBS0ksRUFDckMsRUFFUSxZQUFBQyx1QkFBUixTQUErQkMsR0FDM0IsSUFBb0IsVUFBQWYsS0FBS1QsaUJBQUwsZ0JBQ2hCeUIsRUFEWSxNQUNKRCxFQUVoQixFQUVRLFlBQUFQLHNCQUFSLFNBQThCUyxHQUMxQixJQUFvQixVQUFBakIsS0FBS1AsdUJBQUwsZ0JBQ2hCdUIsRUFEWSxNQUNKQyxFQUVoQixFQUVRLFlBQUFDLHFCQUFSLFdBQ0ksSUFBb0IsVUFBQWxCLEtBQUtOLHVCQUFMLGdCQUNoQnNCLEVBRFksT0FHcEIsRUFFUSxZQUFBbEIsZUFBUixTQUF1QkQsR0FDQSxnQkFBZkEsRUFBRU0sS0FBS0QsTUFDUEYsS0FBS2MsdUJBQXVCakIsRUFBRU0sS0FBS0EsTUFFcEIsbUJBQWZOLEVBQUVNLEtBQUtELE1BQ1BGLEtBQUtRLHNCQUFzQlgsRUFBRU0sS0FBS0EsTUFFbkIsa0JBQWZOLEVBQUVNLEtBQUtELE1BQ1BGLEtBQUtrQixzQkFFYixFQUVRLFlBQUFqQixZQUFSLFNBQW9Ca0IsR0FDaEJ4QixPQUFPeUIsT0FBUUMsWUFBWUYsRUFBUyxJQUN4QyxFQUNKLEVBbEVBLEdDR0F4QixPQUFPMkIsU0FBVyxJQUFJQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGV0bGphcGxheWVyLy4vc3JjL21vZGVsL1BldGxqYVJUQWRhcHRlci50cyIsIndlYnBhY2s6Ly9wZXRsamFwbGF5ZXIvLi9zcmMvbW9kZWwvUGV0bGphUlRJbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgUGV0bGphUlRJbnRlcmZhY2UgfSBmcm9tIFwiLi9QZXRsamFSVEludGVyZmFjZVwiXHJcbmltcG9ydCB7IENvbnRlbnRQbGF5ZXJNZXNzYWdlLCBQbGF5ZXJDb250ZW50TWVzc2FnZSwgQWN0aXZpdHlQcm9ncmVzcyB9IGZyb20gXCIuLi91dGlsL1R5cGVzXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBQZXRsamFSVEFkYXB0ZXIgaW1wbGVtZW50cyBQZXRsamFSVEludGVyZmFjZSB7XHJcbiAgICBwcml2YXRlIGZvbnRTaXplSGFuZGxlcnMgPSBuZXcgQXJyYXk8KHpvb21GYWN0b3I6IG51bWJlcikgPT4gdm9pZD4oKTtcclxuICAgIHByaXZhdGUgY29udGVudFNldHRpbmdIYW5kbGVycyA9IG5ldyBBcnJheTwoY29udGVudFNldHRpbmdzOiB7IHRoZW1lOiBcImxpZ2h0XCIgfCBcImRhcmtcIjsgem9vbUZhY3RvcjogbnVtYmVyOyB9KSA9PiB2b2lkPigpO1xyXG4gICAgcHJpdmF0ZSBhY3Rpdml0eVN0YXR1c0hhbmRsZXJzID0gbmV3IEFycmF5PCgpPT4gdm9pZD4oKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKGUpID0+IHsgdGhpcy5yZWNlaXZlTWVzc2FnZShlKTsgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVnaXN0ZXJDb250ZW50KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc2VuZE1lc3NhZ2UoeyB0eXBlOiBcInJlZ2lzdGVyQ29udGVudFwiLCBkYXRhOiB7fX0pO1xyXG4gICAgfTtcclxuXHJcbiAgICByZWdpc3RlckFjdGl2aXR5UHJvZ3Jlc3MoZGF0YSA6IEFjdGl2aXR5UHJvZ3Jlc3MpIDogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSh7dHlwZSA6IFwicmVnaXN0ZXJBY3Rpdml0eVByb2dyZXNzXCIsIGRhdGEgOiBkYXRhfSlcclxuICAgIH07XHJcblxyXG4gICAgcmVnaXN0ZXJDb250ZW50SGVpZ2h0KGhlaWdodCA6IG51bWJlcil7XHJcbiAgICAgICAgdGhpcy5zZW5kTWVzc2FnZSh7dHlwZSA6IFwicmVnaXN0ZXJDb250ZW50SGVpZ2h0XCIsIGRhdGEgOiB7aGVpZ2h0IDogaGVpZ2h0fX0pXHJcbiAgICB9XHJcblxyXG4gICAgYWRkQ29udGVudFNldHRpbmdIYW5kbGVyKGNvbnRlbnRTZXR0aW5nSGFuZGxlcjogKGNvbnRlbnRTZXR0aW5nczogeyB0aGVtZTogXCJsaWdodFwiIHwgXCJkYXJrXCI7IHpvb21GYWN0b3I6IG51bWJlcjsgfSkgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29udGVudFNldHRpbmdIYW5kbGVycy5wdXNoKGNvbnRlbnRTZXR0aW5nSGFuZGxlcik7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRm9udFNpemVIYW5kbGVyKGZvbnRTaXplSGFuZGxlcjogKGZvbnRGYWN0b3I6IG51bWJlcikgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZm9udFNpemVIYW5kbGVycy5wdXNoKGZvbnRTaXplSGFuZGxlcik7XHJcbiAgICB9O1xyXG5cclxuICAgIGFkZEFjdGl2aXR5U3RhdHVzSGFuZGxlcihhY3Rpdml0eVN0YXR1c0hhbmRsZXI6ICgpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmFjdGl2aXR5U3RhdHVzSGFuZGxlcnMucHVzaChhY3Rpdml0eVN0YXR1c0hhbmRsZXIpO1xyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIGZvbnRTaXplTWFzc2FnZUhhbmRsZXIoZm9udEZhY3RvcjogbnVtYmVyKSA6IHZvaWQge1xyXG4gICAgICAgIGZvciAodmFyIGhhbmRsZXIgb2YgdGhpcy5mb250U2l6ZUhhbmRsZXJzKSB7XHJcbiAgICAgICAgICAgIGhhbmRsZXIoZm9udEZhY3Rvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIGNvbnRlbnRTZXR0aW5nSGFuZGxlcihjb250ZW50U2V0dGluZ3M6IHsgdGhlbWU6IFwibGlnaHRcIiB8IFwiZGFya1wiOyB6b29tRmFjdG9yOiBudW1iZXJ9KSA6IHZvaWR7XHJcbiAgICAgICAgZm9yICh2YXIgaGFuZGxlciBvZiB0aGlzLmNvbnRlbnRTZXR0aW5nSGFuZGxlcnMpIHtcclxuICAgICAgICAgICAgaGFuZGxlcihjb250ZW50U2V0dGluZ3MpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcHJpdmF0ZSBjb250ZW50U3RhdHVzSGFuZGxlcigpe1xyXG4gICAgICAgIGZvciAodmFyIGhhbmRsZXIgb2YgdGhpcy5hY3Rpdml0eVN0YXR1c0hhbmRsZXJzKXtcclxuICAgICAgICAgICAgaGFuZGxlcigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlY2VpdmVNZXNzYWdlKGU6IE1lc3NhZ2VFdmVudDxQbGF5ZXJDb250ZW50TWVzc2FnZT4pOiB2b2lkIHtcclxuICAgICAgICBpZiAoZS5kYXRhLnR5cGUgPT0gXCJ6b29tQnlGYWN0b3JcIikge1xyXG4gICAgICAgICAgICB0aGlzLmZvbnRTaXplTWFzc2FnZUhhbmRsZXIoZS5kYXRhLmRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZS5kYXRhLnR5cGUgPT0gXCJjb250ZW50U2V0dGluZ3NcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnRTZXR0aW5nSGFuZGxlcihlLmRhdGEuZGF0YSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChlLmRhdGEudHlwZSA9PSBcImFjdGl2aXR5U3RhdHVzXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250ZW50U3RhdHVzSGFuZGxlcigpXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBwcml2YXRlIHNlbmRNZXNzYWdlKG1lc3NhZ2U6IENvbnRlbnRQbGF5ZXJNZXNzYWdlKSA6IHZvaWR7XHJcbiAgICAgICAgd2luZG93LnBhcmVudCEucG9zdE1lc3NhZ2UobWVzc2FnZSwgXCIqXCIpO1xyXG4gICAgfTtcclxufSIsImV4cG9ydCB7fTtcclxuaW1wb3J0IHtQZXRsamFSVEFkYXB0ZXJ9IGZyb20gXCIuL1BldGxqYVJUQWRhcHRlclwiXHJcbmltcG9ydCB7UGV0bGphUlRJbnRlcmZhY2V9IGZyb20gXCIuL1BldGxqYVJUSW50ZXJmYWNlXCJcclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gICAgaW50ZXJmYWNlIFdpbmRvdyB7IFBldGxqYVJUOiBQZXRsamFSVEludGVyZmFjZTsgfVxyXG59XHJcblxyXG53aW5kb3cuUGV0bGphUlQgPSBuZXcgUGV0bGphUlRBZGFwdGVyKCk7Il0sIm5hbWVzIjpbImZvbnRTaXplSGFuZGxlcnMiLCJBcnJheSIsImNvbnRlbnRTZXR0aW5nSGFuZGxlcnMiLCJhY3Rpdml0eVN0YXR1c0hhbmRsZXJzIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJyZWNlaXZlTWVzc2FnZSIsInJlZ2lzdGVyQ29udGVudCIsInRoaXMiLCJzZW5kTWVzc2FnZSIsInR5cGUiLCJkYXRhIiwicmVnaXN0ZXJBY3Rpdml0eVByb2dyZXNzIiwicmVnaXN0ZXJDb250ZW50SGVpZ2h0IiwiaGVpZ2h0IiwiYWRkQ29udGVudFNldHRpbmdIYW5kbGVyIiwiY29udGVudFNldHRpbmdIYW5kbGVyIiwicHVzaCIsImFkZEZvbnRTaXplSGFuZGxlciIsImZvbnRTaXplSGFuZGxlciIsImFkZEFjdGl2aXR5U3RhdHVzSGFuZGxlciIsImFjdGl2aXR5U3RhdHVzSGFuZGxlciIsImZvbnRTaXplTWFzc2FnZUhhbmRsZXIiLCJmb250RmFjdG9yIiwiaGFuZGxlciIsImNvbnRlbnRTZXR0aW5ncyIsImNvbnRlbnRTdGF0dXNIYW5kbGVyIiwibWVzc2FnZSIsInBhcmVudCIsInBvc3RNZXNzYWdlIiwiUGV0bGphUlQiLCJQZXRsamFSVEFkYXB0ZXIiXSwic291cmNlUm9vdCI6IiJ9