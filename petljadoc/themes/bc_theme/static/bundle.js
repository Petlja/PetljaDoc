(()=>{"use strict";var t={177:(t,e,i)=>{i.r(e)}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var o=e[s]={exports:{}};return t[s](o,o.exports,i),o.exports}i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t=function(){function t(t,e){var i=t.active_lessons,n=t.externalLinkLinks,o=t.externalLinkTexts,r=t.lang,c=t.longDesc,a=t.nav_link,u=t.requirements,l=t.shortDesc,m=t.toc,h=t.title,v=t.willLearn;this.x={},Object.assign(this,{active_lessons:i,externalLinkLinks:n,externalLinkTexts:o,lang:r,longDesc:c,nav_link:a,requirements:u,shortDesc:l,toc:m,title:h,willLearn:v}),this.buildPath=e;for(var d=0,p=0;p<i.length;p++)for(var g=0;g<i[p].active_activities.length;g++)this.x[s(p,g)]=d,d++}return t.prototype.getLessonsCount=function(){return this.active_lessons.length},t.prototype.getActivityOrderNumber=function(t){return this.x[s(t.lectureNumber,t.activityNumber)]},t.prototype.getActivityCount=function(){return this.active_lessons.reduce((function(t,e){return t+e.active_activities.length}),0)},t.prototype.getActivityURL=function(t,e){return this.buildPath+"/"+this.active_lessons[t].folder_url+"/"+this.active_lessons[t].active_activities[e].toc_url+".html"},t.prototype.inSingleLectureMode=function(){return 1==this.getActivityCount()},t.prototype.isNextLecturePossible=function(t){return this.active_lessons[t.lectureNumber].active_activities.length-1!=t.activityNumber||this.active_lessons.length-1!=t.lectureNumber},t.prototype.nextLecture=function(t){return this.active_lessons[t.lectureNumber].active_activities.length-1>t.activityNumber?{lectureNumber:t.lectureNumber,activityNumber:t.activityNumber+1}:{lectureNumber:t.lectureNumber+1,activityNumber:0}},t.prototype.isPreviousLecturePossible=function(t){return 0!=t.lectureNumber||0!=t.activityNumber},t.prototype.previousLecture=function(t){return 0!=t.activityNumber?{lectureNumber:t.lectureNumber,activityNumber:t.activityNumber-1}:{lectureNumber:t.lectureNumber-1,activityNumber:this.active_lessons[t.lectureNumber-1].active_activities.length-1}},t}(),e=function(){function t(t){this.title=t,localStorage.getItem(t)||localStorage.setItem(t,JSON.stringify(new Array))}return t.prototype.checkProgress=function(t,e){var i;try{i=localStorage.getItem(this.title)}catch(t){return!1}return!!i&&-1!=JSON.parse(i).indexOf(s(t,e))},t.prototype.recordProgress=function(t,e,i){var n;try{n=localStorage.getItem(this.title)}catch(t){return}if(n){var o=JSON.parse(n);-1==o.indexOf(s(t,e))&&(o.push(s(t,e)),localStorage.setItem(this.title,JSON.stringify(o)))}},t}();function s(t,e){return t.toString()+"-"+e.toString()}var n="completed",o="passed",r=function(){function t(t,e){for(var i in this.sw=t,this.course=e,this.course.x){var s=t.ScormProcessGetValue("cmi.objectives."+this.course.x[i]+".status");void 0!==s&&""!=s&&"not attempted"!=s||(this.sw.ScormProcessSetValue("cmi.objectives."+this.course.x[i]+".status","incomplete"),this.sw.commit())}}return t.prototype.checkIfComplete=function(){var t=!0,e=0;for(var i in this.course.x){var s=this.sw.ScormProcessGetValue("cmi.objectives."+this.course.x[i]+".status");s!==n&&s!==o?t=!1:e+=1}t?this.course.getLessonsCount()>1?this.sw.setFinishCourse():this.sw.finishSingleActivityCourse():this.sw.updateCourseProgress(e/this.course.getActivityCount()*100),this.sw.commit()},t.prototype.checkProgress=function(t,e){var i=this.course.x[s(t,e)],r=this.sw.ScormProcessGetValue("cmi.objectives."+i+".status");return r===n||r===o},t.prototype.recordProgress=function(t,e,i){var r=this.course.x[s(t,e)];if("quiz"==i.lectureType){var c=(i.score/i.maxScore*100).toFixed(2);this.sw.ScormProcessSetValue("cmi.objectives."+r+".status",o),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.max","100"),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.min","0"),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.raw",c)}else this.sw.ScormProcessSetValue("cmi.objectives."+r+".status",n),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.max","100"),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.min","0"),this.sw.ScormProcessSetValue("cmi.objectives."+r+".score.raw","100");this.sw.commit(),this.checkIfComplete()},t}(),c=function(){function t(){}return t.prototype.checkProgress=function(t,e){return this.progressRecord[s(t,e)]},t.prototype.recordProgress=function(t,e,i){var n=s(t,e);this.progressRecord[n]=!0},t}(),a=function(){function t(t,e){if(this.course=t,this.progressManager=e,this.contentSettings={contentTheme:"light",contentZoomFactor:0},this.currentActivity={lectureNumber:0,activityNumber:0},this.iFrame=document.getElementById("main-iframe"),this.main=document.getElementById("main"),this.courseContent=document.getElementById("course-content"),this.toc=document.getElementById("toc"),this.tocToggle=document.getElementById("toc-toggle"),this.fontOption=document.getElementById("font-size"),this.fontOptionModal=document.getElementById("font-size-modal"),this.lectureTitleHeader=document.getElementById("lecture-title-header"),this.playerHeader=document.getElementById("player-header"),this.courseTitle=document.getElementById("course-title"),this.contentNav=document.getElementById("content-nav"),this.enlargeFont=document.getElementById("larger-text"),this.reduceFont=document.getElementById("smaller-text"),this.nextActivityButton=document.getElementById("next-activity"),this.previousActivityButton=document.getElementById("previous-activity"),this.courseTitle.innerHTML=t.title,this.course.inSingleLectureMode())this.contentNav.classList.add("content-nav-off"),this.courseContent.classList.add("course-content-fs"),this.tocToggle.style.display="none",this.playerHeader.classList.add("space-around");else{this.lectureHTMLElements=new Array;for(var i=0;i<t.active_lessons.length;i++)this.createSection(i);this.isSmallScreen()?(this.contentNav.classList.add("content-nav-off"),this.courseContent.classList.add("course-content-fs"),this.previousScreenSize="small"):(this.contentNav.classList.add("content-nav-on"),this.courseContent.classList.add("course-content-toc"),this.previousScreenSize="large"),this.currentSubsection=this.lectureHTMLElements[this.currentActivity.lectureNumber].subsections[this.currentActivity.activityNumber].subsection}this.openContentActivity(this.currentActivity.lectureNumber,this.currentActivity.activityNumber),this.addEventListener()}return t.prototype.addEventListener=function(){var e=this;this.enlargeFont.addEventListener("click",(function(){e.zoomWithFactor(t.zoomFactor),e.contentSettings.contentZoomFactor+=t.zoomFactor})),this.reduceFont.addEventListener("click",(function(){e.zoomWithFactor(-t.zoomFactor),e.contentSettings.contentZoomFactor-=t.zoomFactor})),window.addEventListener("message",(function(t){e.receiveMessage(t)})),window.addEventListener("click",(function(t){e.fontOption.contains(t.target)?e.fontOptionModal.classList.toggle("hide-element"):e.fontOptionModal.classList.contains("hide-element")||e.fontOptionModal.contains(t.target)||e.fontOptionModal.classList.add("hide-element")})),window.addEventListener("blur",(function(){e.fontOptionModal.classList.add("hide-element")})),this.course.inSingleLectureMode()||(window.addEventListener("resize",(function(){e.isSmallScreen()&&"large"==e.previousScreenSize?(e.navStatus=e.isNavVisible(),e.isNavVisible()&&(e.contentNav.classList.replace("content-nav-on","content-nav-off"),e.courseContent.classList.replace("course-content-toc","course-content-fs")),e.previousScreenSize="small"):e.isSmallScreen()||"small"!=e.previousScreenSize||(e.navStatus?(e.courseContent.classList.replace("course-content-fs","course-content-toc"),setTimeout((function(){e.contentNav.classList.replace("content-nav-off","content-nav-on")}),200)):(e.contentNav.classList.replace("content-nav-on","content-nav-off"),e.courseContent.classList.replace("course-content-toc","course-content-fs")),e.previousScreenSize="large")})),this.tocToggle.addEventListener("click",(function(){e.isSmallScreen()&&e.isNavVisible()?(e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs")}),100)):e.isSmallScreen()&&!e.isNavVisible()?(e.navStatus=!0,e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs"),e.currentSubsection.scrollIntoView(),setTimeout((function(){e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off")}),200)):!e.isSmallScreen()&&e.isNavVisible()?(e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),e.currentSubsection.scrollIntoView(),setTimeout((function(){e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs")}),200)):e.isSmallScreen()||e.isNavVisible()||(e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs"),setTimeout((function(){e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off")}),200))})),this.nextActivityButton.addEventListener("click",(function(){return e.nextActivity()})),this.previousActivityButton.addEventListener("click",(function(){return e.previousActivity()})))},t.prototype.previousActivity=function(){var t=this;this.currentSubsection.classList.remove("selected-subsection");var e=this.course.previousLecture(this.currentActivity);this.openContentActivity(e.lectureNumber,e.activityNumber),this.isSmallScreen()&&(this.toggleClassesOnElement(this.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){t.toggleClassesOnElement(t.courseContent,"course-content-toc","course-content-fs")}),100))},t.prototype.nextActivity=function(){var t=this;this.currentSubsection.classList.remove("selected-subsection");var e=this.course.nextLecture(this.currentActivity);this.openContentActivity(e.lectureNumber,e.activityNumber),this.isSmallScreen()&&(this.toggleClassesOnElement(this.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){t.toggleClassesOnElement(t.courseContent,"course-content-toc","course-content-fs")}),100))},t.prototype.sendMessage=function(t){this.iFrame.contentWindow.postMessage(t,"*")},t.prototype.receiveMessage=function(t){if("registerContent"==t.data.type&&(this.sendMessage({type:"contentSettings",data:this.contentSettings}),this.progressManager.checkProgress(this.currentActivity.lectureNumber,this.currentActivity.activityNumber)&&this.sendMessage({type:"activityStatus",data:!0})),"registerActivityProgress"==t.data.type){var e=t.data.data;this.course.inSingleLectureMode()||this.markAsDone(this.currentActivity.lectureNumber,this.currentActivity.activityNumber),this.progressManager.recordProgress(this.currentActivity.lectureNumber,this.currentActivity.activityNumber,e)}},t.prototype.toggleClassesOnElement=function(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];e.forEach((function(e){return t.classList.toggle(e)}))},t.prototype.zoomWithFactor=function(t){this.sendMessage({type:"zoomByFactor",data:t})},t.prototype.setCurrentTitle=function(t){this.lectureTitleHeader.innerHTML=t},t.prototype.frameActivity=function(t,e){this.iFrame.setAttribute("src",this.course.getActivityURL(t,e)),this.setCurrentTitle(this.course.active_lessons[t].active_activities[e].title)},t.prototype.isNavVisible=function(){return this.contentNav.classList.contains("content-nav-on")},t.prototype.isSmallScreen=function(){return this.main.clientWidth<=t.MEDIA_QUERY_WIDTH},t.prototype.createSection=function(t){var e=this,i=this.course.active_lessons[t],s=document.createElement("div");s.classList.add("section-wrapper");var n=document.createElement("div");n.classList.add("course-section");var o=document.createElement("div");o.classList.add("toggle-off","sub-section-wrapper");var r=document.createElement("div");r.classList.add("lecture-toggle");var c=document.createElement("span");c.classList.add("lecture-title","no-select"),c.innerHTML=i.title;var a=document.createElement("div");a.classList.add("toggle-caret");var u=document.createElement("i");u.classList.add("bi","bi-caret-right"),a.append(u),n.addEventListener("click",(function(){o.classList.toggle("toggle-off"),u.classList.toggle("bi-caret-right"),u.classList.toggle("bi-caret-down")})),r.append(c),n.append(r),n.append(a),s.append(n);for(var l=new Array,m=function(s){var n=document.createElement("div"),r=document.createElement("i");h.progressManager.checkProgress(t,s)?(r.classList.add("bi","bi-check-lg","activity-status-done"),h.currentActivity.lectureNumber=t,h.currentActivity.activityNumber=s):r.classList.add("bi","bi-dot","activity-status-not-done");var c=document.createElement("div");c.innerHTML=i.active_activities[s].title,n.classList.add("subsection","no-select"),n.append(r),n.append(c),n.addEventListener("click",(function(){e.isSmallScreen()&&(e.toggleClassesOnElement(e.contentNav,"content-nav-on","content-nav-off"),setTimeout((function(){e.toggleClassesOnElement(e.courseContent,"course-content-toc","course-content-fs")}),100)),e.currentActivity.lectureNumber===t&&e.currentActivity.activityNumber===s||e.openContentActivity(t,s)})),o.append(n),l.push({subsection:n,sectionStatus:r})},h=this,v=0;v<i.active_activities.length;v++)m(v);this.lectureHTMLElements.push({sectionHTML:o,caretHTML:u,subsections:l}),s.append(o),this.toc.append(s)},t.prototype.openContentActivity=function(t,e){this.frameActivity(t,e),this.currentActivity.lectureNumber=t,this.currentActivity.activityNumber=e,this.course.inSingleLectureMode()||(this.currentSubsection.classList.remove("selected-subsection"),this.currentSubsection=this.lectureHTMLElements[t].subsections[e].subsection,this.currentSubsection.classList.add("selected-subsection"),this.lectureHTMLElements[t].sectionHTML.classList.remove("toggle-off"),this.lectureHTMLElements[t].caretHTML.classList.replace("bi-caret-right","bi-caret-down"),this.currentSubsection.scrollIntoView(),this.updateButtonStatus(t,e))},t.prototype.markAsDone=function(t,e){this.lectureHTMLElements[t].subsections[e].sectionStatus.classList.replace("activity-status-not-done","activity-status-done"),this.lectureHTMLElements[t].subsections[e].sectionStatus.classList.replace("bi-dot","bi-check-lg")},t.prototype.updateButtonStatus=function(t,e){this.course.isNextLecturePossible({lectureNumber:t,activityNumber:e})?this.nextActivityButton.disabled=!1:this.nextActivityButton.disabled=!0,this.course.isPreviousLecturePossible({lectureNumber:t,activityNumber:e})?this.previousActivityButton.disabled=!1:this.previousActivityButton.disabled=!0},t.MEDIA_QUERY_WIDTH=1150,t.zoomFactor=1,t}();function u(t,e){var i,s;if((s=(i=t.toString()).length)>e)i=i.substring(0,e);else for(var n=s;n<e;n++)i="0"+i;return i}function l(t){for(var e=0;null==t.API&&null!=t.parent&&t.parent!=t&&e<7;){if(e>7)return null;e++,t=window.parent}return t.API}var m="false",h=function(){function t(t){this.API=t,this.startTimeStamp=new Date,this.finishCalled=!1,this.initialized=!1,this.processedUnload=!1,this.reachedEnd=!1,this.ScormProcessInitialize(),this.startTimeStamp=new Date}return t.prototype.commit=function(){this.API.LMSCommit("")},t.prototype.ScormProcessInitialize=function(){if(this.API.LMSInitialize("")==m){var t=this.API.LMSGetLastError(),e="Number: "+t+"\nDescription: "+this.API.LMSGetErrorString(t)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(t);console.log("Error - Could not initialize communication with the LMS.\n\nYour results may not be recorded.\n\n"+e),this.initialized=!1}this.initialized=!0},t.prototype.ScormProcessFinish=function(){var t;if(0!=this.initialized&&1!=this.finishCalled)if(t=this.API.LMSFinish(""),this.finishCalled=!0,t!=m);else{var e=this.API.LMSGetLastError(),i="Number: "+e+"\nDescription: "+this.API.LMSGetErrorString(e)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(e);console.log("Error - Could not terminate communication with the LMS.\n\nYour results may not be recorded.\n\n"+i)}},t.prototype.ScormProcessGetValue=function(t){var e;if(0!=this.initialized&&1!=this.finishCalled){if(""==(e=this.API.LMSGetValue(t))){var i=this.API.LMSGetLastError();if("0"!=i){var s="Number: "+i+"\nDescription: "+this.API.LMSGetErrorString(i)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(i);return console.log("Error - Could not retrieve a value from the LMS.\n\n"+s),""}}return e}},t.prototype.ScormProcessSetValue=function(t,e){if(0!=this.initialized&&1!=this.finishCalled&&this.API.LMSSetValue(t,e)==m){var i=this.API.LMSGetLastError(),s="Number: "+i+"\nDescription: "+this.API.LMSGetErrorString(i)+"\nDiagnostic: "+this.API.LMSGetDiagnostic(i);console.log("Error - Could not store a value in the LMS.\n\nYour results may not be recorded.\n\n"+s)}},t.prototype.finishSingleActivityCourse=function(){this.reachedEnd=!0;var t=this.ScormProcessGetValue("cmi.objectives.0.status"),e=this.ScormProcessGetValue("cmi.objectives.0.score.max"),i=this.ScormProcessGetValue("cmi.objectives.0.score.min"),s=this.ScormProcessGetValue("cmi.objectives.0.score.raw");this.ScormProcessSetValue("cmi.core.score.max",e),this.ScormProcessSetValue("cmi.core.score.min",i),this.ScormProcessSetValue("cmi.core.score.raw",s),this.ScormProcessSetValue("cmi.core.lesson_status",t)},t.prototype.setFinishCourse=function(){this.reachedEnd=!0,this.ScormProcessSetValue("cmi.core.score.max","100"),this.ScormProcessSetValue("cmi.core.score.min","0"),this.ScormProcessSetValue("cmi.core.score.raw","100"),this.ScormProcessSetValue("cmi.core.lesson_status","completed")},t.prototype.updateCourseProgress=function(t){this.ScormProcessSetValue("cmi.core.score.max","100"),this.ScormProcessSetValue("cmi.core.score.min","0"),this.ScormProcessSetValue("cmi.core.score.raw",t.toFixed(2)),this.ScormProcessSetValue("cmi.core.lesson_status","completed")},t.prototype.doUnload=function(t){if(void 0===t&&(t=!0),1!=this.processedUnload){this.processedUnload=!0;var e,i,s,n,o,r,c,a,l=(null!=(i=!1)&&null!=i||(i=!0),1e4==(s=((e=(new Date).getTime()-this.startTimeStamp.getTime())-(r=e%1e3)-1e3*(o=(e-r)/1e3%60)-6e4*(n=(e-r-1e3*o)/6e4%60))/36e5)&&(100==(n=(e-36e5*(s=9999))/6e4)&&(n=99),100==(o=(e-36e5*s-6e4*(n=Math.floor(n)))/1e3)&&(o=99),r=e-36e5*s-6e4*n-1e3*(o=Math.floor(o))),c=Math.floor(r/10),a=u(s,4)+":"+u(n,2)+":"+u(o,2),i&&(a+="."+c),s>9999&&(a="9999:99:99",i&&(a+=".99")),a);this.ScormProcessSetValue("cmi.core.session_time",l),0==t&&0==this.reachedEnd&&this.ScormProcessSetValue("cmi.core.exit","suspend"),this.commit(),this.ScormProcessFinish()}},t}();i(177),window.addEventListener("load",(function(){var i=this.document.getElementById("main-iframe").getAttribute("data-content-url");fetch("course.json").then((function(t){return t.json()})).then((function(s){var n,o,u=new t(s,i),m=(null==(o=l(window))&&null!=window.opener&&void 0!==window.opener&&(o=l(window.opener)),o);if(null!=m){var v=new h(m);n=new r(v,u),window.addEventListener("onbeforeunload",(function(){v.doUnload(!1)})),window.addEventListener("onunload",(function(){v.doUnload()}))}else n=function(){try{return localStorage.setItem("",""),""===localStorage.getItem("")&&(localStorage.removeItem(""),!0)}catch(t){return!1}}()?new e(u.title):new c;new a(u,n)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,